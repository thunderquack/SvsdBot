name: CI

on:
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Set up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.x'

    - name: Install GitVersion
      run: dotnet tool install --global GitVersion.Tool

    #- name: Determine version
    #  run: dotnet gitversion /config GitVersion.yml
    #  env:
    #    PATH: ${{ runner.tool_cache }}/dotnet:$PATH
        
    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Run tests
      run: dotnet test --no-build --collect:"XPlat Code Coverage"

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Generate Code Coverage Report
      run: reportgenerator -reports:**/coverage.cobertura.xml -targetdir:coverage -reporttypes:Html

    - name: Check coverage of new lines
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator -reports:**/coverage.cobertura.xml -targetdir:coverage -reporttypes:HtmlSummary
        COVERAGE=$(grep -oP '(?<=<coverage line-rate=")\d\.\d+' coverage/Summary.xml | head -1)
        COVERAGE_PERCENT=$(echo "$COVERAGE * 100" | bc | xargs printf "%.0f")
        if [ $COVERAGE_PERCENT -lt 90 ]; then
          echo "Code coverage is below 90%: $COVERAGE_PERCENT%"
          exit 1
        fi
      env:
        PATH: ${{ runner.tool_cache }}/dotnet:$PATH

    - name: Upload coverage report
      uses: actions/upload-artifact@v2
      with:
        name: coverage-report
        path: coverage
